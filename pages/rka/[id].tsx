import React, { useEffect, useState } from 'react';
import type { GetServerSideProps, NextPage } from 'next';
import Head from 'next/head';
import Navbar from '@/components/Navbar';
import { DownOutlined, EditOutlined } from '@ant-design/icons';

import dummy from '@/dummy/rka-detail.json';
import { Col, Button, Dropdown, Menu, Row, Table, Radio, Switch, Form, Input, InputNumber } from 'antd';

import styles from '@/styles/rka.module.scss';
import { ColumnsType } from 'antd/lib/table';
import ModalForm from '@/components/ModalForm';

interface Props{
  id: number
}

const Rka: NextPage<Props> = ({id}) => {
  // Entah kenapa error di TS-nya.
  const data = dummy[id];

  const _findData = (id: number) => {
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve(data.daftar_pelaksana.find((x: any) => x.id == id));
      }, 1000);
    });
  }
  
  const [editDataId, setEditDataId] = useState<number>(0);
  const [formData, setFormData] = useState<any>({});
  const [form] = Form.useForm();

  const menu: JSX.Element = (
    <Menu>
      <Menu.Item key={1}>
        Rekap 1
      </Menu.Item>
      <Menu.Item key={2}>
        Rekap 2
      </Menu.Item>
      <Menu.Item key={3}>
        Honor Mengajar
      </Menu.Item>
    </Menu>
  );

  useEffect(() => {
    _findData(editDataId).then((res: any) => {
      setFormData(res ?? {});
    });
  }, [editDataId]);

  useEffect(() => {
    form.setFieldsValue(formData);
  }, [formData])

  const handleEditData = async (e: React.MouseEvent<HTMLElement>) => {
    setEditDataId(parseInt(e.currentTarget.dataset.id ?? "0"));
  };

  const handleChangeData = (formValues: any) => {
    form.setFieldsValue(formValues);
  };

  const handleCancelEdit = (e: React.MouseEvent<HTMLElement>) => {
    form.resetFields();
    setEditDataId(0);
    setFormData({});
  };

  const columns: ColumnsType<any> = [
    {
      title: 'No',
      dataIndex: 'no',
      key: 'no',
    },{
      title: 'Jenis',
      dataIndex: 'jenis',
      key: 'jenis',
    },{
      title: 'Satuan Kerja',
      dataIndex: 'satuan_kerja',
      key: 'satuan_kerja'
    },{
      title: 'APBN',
      dataIndex: 'apbn',
      key: 'apbn',
      render: (val: any) => Intl.NumberFormat("in-ID", {style: "decimal"}).format(val)
    },{
      title: 'NON-PNBP',
      dataIndex: 'non_pnbp',
      key: 'non_pnbp',
      render: (val: any) => Intl.NumberFormat("in-ID", {style: "decimal"}).format(val)
    },{
      title: 'BPPTN-BH',
      dataIndex: 'bpptn_bh',
      key: 'bpptn_bh',
      render: (val: any) => Intl.NumberFormat("in-ID", {style: "decimal"}).format(val)
    },{
      title: 'BOPTN',
      dataIndex: 'boptn',
      key: 'boptn',
      render: (val: any) => Intl.NumberFormat("in-ID", {style: "decimal"}).format(val)
    },{
      title: 'Total Pagu',
      dataIndex: 'total_pagu',
      key: 'total_pagu',
      render: (val: any) => Intl.NumberFormat("in-ID", {style: "decimal"}).format(val)
    },{
      title: <Radio.Group style={{display: "flex"}} name="bukaTutupHeader">
        <Radio value={1}>Buka</Radio>
        <Radio value={0}>Tutup</Radio>
      </Radio.Group>,
      dataIndex: 'buka_tutup',
      key: 'buka_tutup',
      render: (val:any) => <Switch defaultChecked={val == 1} />
    },{
      title: '',
      dataIndex: 'id',
      key: 'id',
      render: (val: any) => <Button className="btn-success" shape="circle" data-id={val} onClick={handleEditData}>
        <EditOutlined />
      </Button>
    }
  ];

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar />

      <main className={styles.rkaModule}>
        <h1>RKA Latihan</h1>
        <Row>
          <Col flex={1}>
            <table className={styles.keteranganAwal}>
              <tbody>
                <tr>
                  <td width="200px"><b>Tahun Anggaran</b></td>
                  <td>{data.tahun_anggaran}</td>
                </tr>
                <tr>
                  <td><b>MAK</b></td>
                  <td>{data.mak}</td>
                </tr>
                <tr>
                  <td><b>RENSTRA</b></td>
                  <td style={{textTransform: 'uppercase'}}>{data.renstra}</td>
                </tr>
                <tr>
                  <td><b>KOKIN</b></td>
                  <td style={{textTransform: 'uppercase'}}>{data.kokin}</td>
                </tr>
                <tr>
                  <td><b>Jumlah Pelaksana</b></td>
                  <td>{data.jumlah_pelaksana}</td>
                </tr>
              </tbody>
            </table>
          </Col>
          <Col flex={1}>
            <table className={styles.keteranganTotal} width="100%">
              <tbody>
                <tr>
                  <td width="50%"><b>APBN</b></td>
                  <td width="50%">
                    {Intl.NumberFormat('in-ID', {style: 'decimal'}).format(data.apbn)}
                  </td>
                </tr>
                <tr>
                  <td><b>NON-PNBP</b></td>
                  <td>
                    {Intl.NumberFormat('in-ID', {style: 'decimal'}).format(data.non_pnbp)}
                  </td>
                </tr>
                <tr>
                  <td><b>BPPTN-BH</b></td>
                  <td>
                    {Intl.NumberFormat('in-ID', {style: 'decimal'}).format(data.bpptn_bh)}
                  </td>
                </tr>
                <tr>
                  <td><b>BOPTN</b></td>
                  <td>
                    {Intl.NumberFormat('in-ID', {style: 'decimal'}).format(data.boptn)}
                  </td>
                </tr>
                <tr>
                  <td><b>TOTAL ANGGARAN</b></td>
                  <td>
                    {Intl.NumberFormat('in-ID', {style: 'decimal'}).format(data.total_anggaran)}
                  </td>
                </tr>
              </tbody>
            </table>
          </Col>
        </Row>

        <div className={styles.headerDaftarPelaksana}>
          <h3 style={{float: 'left'}}>Daftar Pelaksana</h3>
          <div style={{float: 'right'}}>
            <Dropdown overlay={menu}>
              <Button className='btn-usu' type='default'>Unduh <DownOutlined /></Button>
            </Dropdown>
          </div>
        </div>
        <Table dataSource={data.daftar_pelaksana.map((x: any, i: number) => ({key: i, no: i + 1, ...x}))}
          columns={columns} scroll={{x: true}} bordered={true} />
      </main>

      <ModalForm isOpen={!!editDataId} isLoading={!!formData && Object.keys(formData).length == 0}
        formTitle='Form Edit'
        onCancel={handleCancelEdit}
        onSubmit={handleChangeData}
        form={form}
      >
        <Form.Item labelCol={{span: 6}} label="Jenis" name="jenis">
          <Input />
        </Form.Item>
        <Form.Item labelCol={{span: 6}} label="Satuan Kerja" name="satuan_kerja">
          <Input />
        </Form.Item>
        <Form.Item labelCol={{span: 6}} label="APBN" name="apbn">
          <InputNumber style={{width: "100%"}} />
        </Form.Item>
        <Form.Item labelCol={{span: 6}} label="NON-PNBP" name="non_pnbp">
          <InputNumber style={{width: "100%"}} />
        </Form.Item>
        <Form.Item labelCol={{span: 6}} label="BPPTN-BH" name="bpptn_bh">
          <InputNumber style={{width: "100%"}} />
        </Form.Item>
        <Form.Item labelCol={{span: 6}} label="BOPTN" name="boptn">
          <InputNumber style={{width: "100%"}} />
        </Form.Item>
      </ModalForm>

      <footer></footer>
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async (context) => {
  return {
    props: {
      id: context.params?.id
    }
  }
}

export default Rka;
